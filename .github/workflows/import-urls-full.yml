name: Importa ricette da URLs (FULL)

on:
  # <— Serve esattamente questo per avere il bottone "Run workflow"
  workflow_dispatch: {}
  # pianificazione notturna (facoltativa, tienila se ti torna utile)
  schedule:
    - cron: "15 2 * * *"

permissions:
  contents: write

concurrency:
  group: import-urls-full
  cancel-in-progress: true

jobs:
  ping:
    # esegui solo su main per evitare doppioni su branch temporanei
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    env:
      YT_API_KEY: ${{ secrets.YT_API_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Sanity check
        run: |
          node -v
          echo "Branch: $GITHUB_REF"
          echo "YT_API_KEY length: ${#YT_API_KEY:-0}"

      - name: Ensure urls.txt
        run: |
          if [ ! -s urls.txt ]; then
            cat > urls.txt <<'EOF'
https://ricette.giallozafferano.it/Gnocchi-alla-sorrentina.html
https://ricette.giallozafferano.it/Pollo-alla-cacciatora.html
https://ricette.giallozafferano.it/Lasagne-alla-Bolognese.html
https://ricette.giallozafferano.it/Tiramisu.html
https://ricette.giallozafferano.it/Pesto-alla-genovese.html
https://ricette.giallozafferano.it/Minestrone-di-verdure.html
EOF
          fi
          echo "Prime 5 URL:"; head -n 5 urls.txt || true

      # — opzionale: scoperta categorie per popolare automaticamente urls.txt
      - name: Discover URLs (GZ)
        continue-on-error: true
        run: |
          if [ -f script/discover-gz.mjs ]; then
            node script/discover-gz.mjs | tee new_urls.txt || true
            if [ -s new_urls.txt ]; then
              # unisci e deduplica
              cat urls.txt new_urls.txt | awk 'NF' | sed 's/[[:space:]]*$//' | sort -u > urls.txt.tmp
              mv urls.txt.tmp urls.txt
            fi
          else
            echo "discover-gz.mjs assente, salto"
          fi
          echo "Totale URL in lista:"; wc -l urls.txt || true

      - name: Import batch
        run: |
          set -e
          if [ ! -f script/import-recipes.mjs ]; then
            echo "manca script/import-recipes.mjs"; exit 1
          fi
          # Importa max 30 URL per run; modifica se vuoi
          node script/import-recipes.mjs urls.txt 30 > new_recipes.json || true
          test -s new_recipes.json || echo "[]" > new_recipes.json
          echo "Anteprima new_recipes.json:"; head -c 800 new_recipes.json; echo

      - name: Validate new (best-effort)
        continue-on-error: true
        run: |
          if [ -f script/validate-recipes.mjs ] && [ -s new_recipes.json ]; then
            node script/validate-recipes.mjs new_recipes.json || true
          fi

      - name: Merge dataset
        run: |
          set -e
          DATA="assets/json/recipes-it.json"
          mkdir -p assets/json
          [ -f "$DATA" ] || echo "[]" > "$DATA"
          if [ -s new_recipes.json ] && [ "$(jq 'length' new_recipes.json)" -gt 0 ]; then
            if [ -f script/merge-recipes.mjs ]; then
              node script/merge-recipes.mjs "$DATA" new_recipes.json > "${DATA}.tmp"
              mv "${DATA}.tmp" "$DATA"
            else
              # fallback merge semplice
              jq -s 'add | unique_by(.url)' "$DATA" new_recipes.json > "${DATA}.tmp"
              mv "${DATA}.tmp" "$DATA"
            fi
            echo "Dimensione dataset:"; jq 'length' "$DATA"
          else
            echo "Nessuna nuova ricetta da unire."
          fi

      - name: Commit and push
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          if git diff --cached --quiet; then
            echo "Niente da commitare."
            exit 0
          fi
          COUNT=$(node -e "try{console.log((JSON.parse(require('fs').readFileSync('new_recipes.json','utf8'))||[]).length||0)}catch(e){console.log(0)}")
          git commit -m "Importa ricette (FULL) +${COUNT}"
          git push

      - name: Upload artifact (debug)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: new_recipes
          path: new_recipes.json
          if-no-files-found: warn
