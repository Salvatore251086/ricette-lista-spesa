name: Importa ricette (STEP 3 - merge controllato)

on:
  workflow_dispatch:
    inputs:
      offset:
        description: "Quante URL saltare all'inizio (multipli di count)"
        required: true
        default: "0"
      count:
        description: "Quante URL importare in questo batch"
        required: true
        default: "3"

permissions:
  contents: write

jobs:
  merge:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Seleziona sottoinsieme URL (offset+count)
        id: pick
        shell: bash
        run: |
          set -euo pipefail
          OFF="${{ github.event.inputs.offset }}"
          CNT="${{ github.event.inputs.count }}"
          echo "Offset: $OFF  Count: $CNT"

          # normalizza e deduplica la lista una volta
          awk 'length>0' urls.txt | sed 's/\r$//' | awk '!v[$0]++' > urls.clean.txt

          # prendi il blocco desiderato
          tail -n +$((OFF+1)) urls.clean.txt | head -n "$CNT" > urls.batch.txt

          echo "Batch selezionato:"
          cat urls.batch.txt || true

      - name: Import batch selezionato
        id: import
        shell: bash
        run: |
          set -euo pipefail
          if [ ! -s urls.batch.txt ]; then
            echo "Nessuna URL nel batch – esco senza errori."
            echo "newcount=0" >> $GITHUB_OUTPUT
            echo "[]" > new_recipes.json
            exit 0
          fi

          # Usa lo script esistente d’import
          node script/import-recipes.mjs urls.batch.txt 30 > new_recipes.json || echo "[]" > new_recipes.json

          echo "Anteprima new_recipes.json:"
          head -c 800 new_recipes.json || true
          echo

          NEWCOUNT=$(node -e "try{console.log((JSON.parse(require('fs').readFileSync('new_recipes.json','utf8'))||[]).length||0)}catch(e){console.log(0)}")
          echo "Nuove ricette trovate: $NEWCOUNT"
          echo "newcount=$NEWCOUNT" >> $GITHUB_OUTPUT

      - name: Backup dataset esistente
        id: backup
        shell: bash
        run: |
          set -euo pipefail
          DATA="assets/json/recipes-it.json"
          mkdir -p assets/json
          # se non esiste, inizializza dataset vuoto
          [ -f "$DATA" ] || echo "[]" > "$DATA"

          TS="$(date +%Y%m%d-%H%M%S)"
          BACK="assets/json/recipes-it.backup.$TS.json"
          cp "$DATA" "$BACK"

          echo "Creato backup: $BACK"
          echo "backup=$BACK" >> $GITHUB_OUTPUT

      - name: Merge nel dataset
        if: steps.import.outputs.newcount != '0'
        shell: bash
        run: |
          set -euo pipefail
          DATA="assets/json/recipes-it.json"
          TMP="${DATA}.tmp"

          OLD=$(node -e "try{console.log((JSON.parse(require('fs').readFileSync('$DATA','utf8'))||[]).length||0)}catch(e){console.log(0)}")
          echo "Dimensione dataset PRIMA: $OLD"

          # Merge usando lo script già presente
          node script/merge-recipes.mjs "$DATA" new_recipes.json > "$TMP"
          mv "$TMP" "$DATA"

          NOW=$(node -e "try{console.log((JSON.parse(require('fs').readFileSync('$DATA','utf8'))||[]).length||0)}catch(e){console.log(0)}")
          echo "Dimensione dataset DOPO:  $NOW"

      - name: Commit & push (solo se c’è qualcosa da salvare)
        shell: bash
        run: |
          set -euo pipefail
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add -A
          if git diff --cached --quiet; then
            echo "Niente da commitare."
            exit 0
          fi

          NEW="${{ steps.import.outputs.newcount }}"
          git commit -m "Merge ricette (step3) +${NEW}"
          git push

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: step3-merge-artifacts
          path: |
            new_recipes.json
            urls.batch.txt
            ${{ steps.backup.outputs.backup }}
          if-no-files-found: warn
